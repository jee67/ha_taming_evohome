alias: _new Real Thermostat Temperature
description: >-
  Instructions

  - change the entity_id in the trigger and in the condition to use the correct
  fake thermostat. Trigger and condition cannot be replaced by variales.

  - 
trigger:
  - platform: time_pattern
    minutes: /5
  - platform: state
    entity_id:
      - climate.woonkamer_fake_thermostat
    attribute: temperature
condition:
  - condition: not
    alias: Do Not execute if the zone has a permanent temperature setting
    conditions:
      - condition: state
        entity_id: climate.woonkamer
        attribute: preset_mode
        state: permanent
action:
  - variables:
      name: woonkamer
      real_therm: climate.{{name}}
      fake_therm: climate.{{name}}_fake_thermostat
      delta_var: input_number.delta_{{name}}
      room_temp: "{{ state_attr(real_therm, 'current_temperature') | float | round(1) }}"
      room_set_temp: "{{ state_attr(real_therm, 'temperature') | float | round(1) }}"
      target_temp: "{{ state_attr(fake_therm, 'temperature') | float | round(1) }}"
      delta_temp: "{{ states(delta_var) | float | round(1) }}"
      setpoint: >-
        {{ state_attr(real_therm,'status').setpoints.this_sp_temp | float |
        round(1) }}
    alias: Define the variables for the remainder of the automation
  - choose:
      - conditions:
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ room_temp < target_temp }}"
                    alias: Actual lower than target
                  - condition: template
                    value_template: "{{ room_set_temp < (room_temp + delta_temp) }}"
                    enabled: true
                    alias: Room setpoint lower actual + delta
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ room_temp >= target_temp }}"
                    alias: Actual hoger of equal target
                  - condition: template
                    value_template: "{{ room_set_temp < target_temp }}"
                    enabled: true
                    alias: Room setpoint lower target
        sequence:
          - alias: Wait with calling EvoHome service > 5 minuten
            if:
              - alias: EVO call les than 5 minuten ago?
                condition: template
                value_template: >-
                  {{(as_timestamp(now())/60) <
                  (((as_timestamp(states.input_datetime.evo_aangeroepen.state) /
                  60 ) + 5))}}
            then:
              - wait_template: >-
                  {{(as_timestamp(now())/60) >=
                  (((as_timestamp(states.input_datetime.evo_aangeroepen.state) /
                  60 ) + 5))}}
                continue_on_timeout: true
                alias: Wait with Evo call after it's over 5 minutes
          - service: evohome.set_zone_override
            data:
              entity_id: "{{ real_therm }}"
              duration:
                hours: 5
              setpoint: >-
                {{ min(max((room_temp + delta_temp), room_set_temp),
                target_temp)  }}
            enabled: true
          - service: input_datetime.set_datetime
            data:
              timestamp: "{{ now().timestamp() }}"
            target:
              entity_id: input_datetime.evo_aangeroepen
        alias: target not reached or setpoint under target
      - conditions:
          - condition: template
            value_template: "{{ room_temp >= target_temp }}"
          - condition: template
            value_template: "{{ setpoint == target_temp }}"
          - condition: not
            conditions:
              - condition: template
                value_template: "  {{is_state_attr(real_therm,'preset_mode', 'none')}}"
        sequence:
          - alias: Wait with calling EvoHome service > 5 minuten
            if:
              - alias: "EVO call less than 5 minuten ago? "
                condition: template
                value_template: >-
                  {{(as_timestamp(now())/60) <
                  (((as_timestamp(states.input_datetime.evo_aangeroepen.state) /
                  60 ) + 5))}}
            then:
              - wait_template: >-
                  {{(as_timestamp(now())/60) >=
                  (((as_timestamp(states.input_datetime.evo_aangeroepen.state) /
                  60 ) + 5))}}
                continue_on_timeout: true
                alias: Wait until 5 minutes passed
          - service: evohome.clear_zone_override
            data:
              entity_id: "{{ real_therm }}"
          - service: input_datetime.set_datetime
            data:
              timestamp: "{{ now().timestamp() }}"
            target:
              entity_id: input_datetime.evo_aangeroepen
        alias: target reached, setpoint higher or equal target
mode: restart
