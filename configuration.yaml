# this code is for one EVOHome zone. Duplicate for additional zones to control.

#dummy switches, needed for the fake thermostats
#if you have switch: in your configuration.yaml, avoid another line with switch, since this will result in an error. Add this code to it.
#change the name in accordance with the related climate: entity . In this example the zone to tame is 'woonkamer'
switch:
  - platform: template
    switches:
      dummy_woonkamer_switch:
        #value_template: "{{ false  }}"
        turn_on:
        turn_off:

#fake thermostat, you need one for every zone you want to regulate.
#if you have climate: in your configuration.yaml, avoid another line with climate, since this will result in an error.  Add this code to it.
#change name: heater: and target_sensor: for your setup
climate:
  - platform: generic_thermostat
    name: Woonkamer Fake Thermostat
    unique_id: ft_wk
    heater: switch.dummy_woonkamer_switch
    target_sensor: sensor.current_temp_woonkamer
    min_temp: 15
    max_temp: 25
    ac_mode: false
    # target_temp: 20
    # cold_tolerance: 0.1
    # hot_tolerance: 0.1
    initial_hvac_mode: 'heat'
    precision: 0.1

#helper, to limit the service calls to EvoHome, otherwise the service might be refused
input_datetime:
  evo_aangeroepen:
    name: evo laatste aanroep
    has_date: true
    has_time: true
  
#helpers for every zone, to set the increease of the setpoints
#if you have input_numer: in your configuration.yaml, avoid another line with input_numer, since this will result in an error. Add this code to it.
#too low might result in not rising temperatures, to high in increasing boiler support 
#change woonkamer into the correct zone name
input_number:
  delta_woonkamer:
    name: Delta Woonkamer
    initial: 0.1
    min: 0.1
    max: 0.7
    step: 0.1

#Helper variables to overrule schedule temperature
#change woonkamer into the correct zone name
  woonkamer_man_temp:
    name: Woonkamer manual temp
    min: 0.0
    max: 25
    step: 0.1
    mode: box
